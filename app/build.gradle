plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
}


def androidId=rootProject.ext.androidId
def appId=rootProject.ext.appId
def suport=rootProject.ext.dependencies

android {
    compileSdkVersion androidId.compileSdkVersion
    buildToolsVersion androidId.buildToolsVersion

    defaultConfig {
        applicationId appId.applicationId
        minSdkVersion androidId.minSdkVersion
        targetSdkVersion androidId.targetSdkVersion
        versionCode androidId.versionCode
        versionName androidId.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        kapt {
            arguments {
                arg("content", "hello apt")
            }
        }


    }
    // 签名配置（隐形坑：必须写在buildTypes之前）
    signingConfigs {
        debug {
            storeFile file('C:/Users/Administrator/commonKestore.jks')
            storePassword "123456"
            keyAlias "key"
            keyPassword "123456"
        }
        release {
            // 签名证书文件
            storeFile file('C:/Users/Administrator/commonKestore.jks')
            // 签名证书文件的密码
            storePassword "123456"
            // 签名证书中密钥别名
            keyAlias "key"
            // 签名证书中该密钥的密码
            keyPassword "123456"
            // 是否开启V2打包
            v2SigningEnabled true
        }
    }


    buildTypes {
        debug{
            signingConfig signingConfigs.debug
            buildConfigField("String","url","\"$url.debug\"")
        }
        release {
            signingConfig signingConfigs.release
            buildConfigField("String","url","\"$url.release\"")
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // AdbOptions 可以对 adb 操作选项添加配置
    adbOptions {
        // 配置操作超时时间，单位毫秒
        timeOutInMs = 5 * 1000_0

        // adb install 命令的选项配置
        installOptions '-r', '-s'
    }
    // 对 dx 操作的配置，接受一个 DexOptions 类型的闭包，配置由 DexOptions 提供
    dexOptions {
        // 配置执行 dx 命令是为其分配的最大堆内存
        javaMaxHeapSize "4g"
        // 配置是否预执行 dex Libraries 工程，开启后会提高增量构建速度，不过会影响 clean 构建的速度，默认 true
        preDexLibraries = false
        // 配置是否开启 jumbo 模式，代码方法是超过 65535 需要强制开启才能构建成功
        jumboMode true
        // 配置 Gradle 运行 dx 命令时使用的线程数量
        threadCount 8
        // 配置multidex参数
        additionalParameters = [
                '--multi-dex', // 多dex分包
                '--set-max-idx-number=50000', // 每个包内方法数上限
                // '--main-dex-list=' + '/multidex-config.txt', // 打包到主classes.dex的文件列表
                '--minimal-main-dex'
        ]
    }
    // 执行 gradle lint 命令即可运行 lint 检查，默认生成的报告在 outputs/lint-results.html 中
    lintOptions {
        // 遇到 lint 检查错误会终止构建，一般设置为 false
        abortOnError false
        // 将警告当作错误来处理（老版本：warningAsErros）
        warningsAsErrors false
        // 检查新 API
        checkOnly 'NewApi'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    suport.each{k,v->
        implementation v
    }
    implementation project(":common")
    implementation project(":annotation")
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    kapt project(":compiler")
    if(isRelease){
        implementation project(":OrderModule")
        implementation project(":PersonModule")
    }
}